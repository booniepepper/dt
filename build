#!/bin/bash

set -euo pipefail

cd "$(dirname "$0")" || exit 1
project_root="$(pwd)"

required_zig_version='0.11.0'

help() {
    >&2 echo "USAGE: $(basename "$0") [clean|compile|release|test|cross-clean|cross-release|cross-tar]..."
    >&2 echo "A simple build will be './build release'"
    >&2 echo "Compiling requires Zig ${required_zig_version}."
}

require-zig() {
    # First we check Zig's available
    if ! command -v zig > /dev/null; then
        >&2 echo "Zig is not installed or not found on PATH."
        >&2 echo "Building this project currently requires Zig ${required_zig_version}"
        exit 1
    fi

    # Then we check Zig is a version we can build with
    _zig_version="$(zig version)"
    if [[ ! ${_zig_version} =~ ^${required_zig_version} ]]; then
        >&2 echo "Zig ${_zig_version} was found, but only version ${required_zig_version} is supported."
        exit 1
    fi
}

clean() {
    rm -rf ./zig-cache ./zig-out
}

compile() {
    require-zig

    zig build
}

test() {
    require-zig

    zig build test
}

release() {
    require-zig

    zig build -Doptimize=ReleaseSmall
}

cross-clean() {
    rm -rf ./target
}

cross-release() {
    require-zig

    local triples=(
        aarch64-linux-gnu
        aarch64-linux-musleabi
        aarch64-macos-none
        arm-linux-musleabi
        arm-linux-musleabihf
        x86-linux-gnu
        x86-linux-musl
        mips64el-linux-gnuabi64
        mips64el-linux-musl
        mips64-linux-gnuabi64
        mips64-linux-musl
        mipsel-linux-gnu
        mipsel-linux-musl
        mips-linux-gnu
        mips-linux-musl
        powerpc64le-linux-gnu
        powerpc64le-linux-musl
        powerpc-linux-gnu
        powerpc-linux-musl
        riscv64-linux-gnu
        riscv64-linux-musl
        wasm32-wasi-musl
        x86_64-linux-gnu
        x86_64-linux-musl
        x86_64-macos-none
    )

    for triple in "${triples[@]}"; do
        >&2 echo "** Cross-compiling for $triple"
        local out="$project_root"/target/"$triple"
        mkdir -p "$out"

        zig build -Doptimize=ReleaseSmall -Dtarget="$triple" -p "$out"
    done
}

cross-tar() {
    cd "$project_root"/target || exit 1
    for triple in *; do
        >&2 echo "** Making archive for $triple"
        tar -czvf "$triple".tgz "$triple"
    done
}

for cmd in "$@"; do
    cd "$project_root" || exit 1
    eval "$cmd"
done
