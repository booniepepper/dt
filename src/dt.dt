### Flags and such ###

[ [ action flag ]:
  args [ flag eq? ] any?
  action swap do?
] \handle-flag def

[ "dt " p version pl ] \print-version def

[ [ print-version 0 exit ]   "--version" handle-flag ] \--version def

[ print-version
  [ "USAGE: dt FLAGS CODE..."
    "dt is \"duct tape\" for your unix pipes."
    ""
    "dt can be used in pipes to transform data with general purpose programming"
    "operations. It can also excel in short shebang scripts, or be explored as"
    "an interactive REPL (read-eval-print loop)."
    ""
    "More info at https://dt.plumbing"
  ] pls
] \print-help def

[ [ print-help 0 exit ]   "--help" handle-flag ] \--help def

[ --help --version ] \handle-flags def

[ handle-flags   args unwords eval ] \run-args def!


### PIPE things ###

[ read-lines   run-args ] \pipe-thru-args def!


### Shebang things ###

[ args deq swap drop ] \shebang-args def!


### REPL things ###

[ red "dt " ep version epl   norm inspire epl ] \repl-greet def

[ \quit \.q def
  \quit \exit def
  # TODO: define a help command
] \repl-prelude def

[ handle-flags   repl-greet   repl-prelude   repl ] \main-repl def!

[ "Â» " p   read-line eval   repl ] \repl def!
